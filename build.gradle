plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
}
group = project.maven_group
version = "${project.mod_version}+${project.minecraft}"

base {
	archivesName = project.mod_name.toLowerCase()
}

loom {
	mods {
		"viewpoint" {
			sourceSet("main")
		}
	}
}

runClient.doFirst {
	args += ['--username', "viewpoint${new Random().nextInt(1000)}"]
}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url 'https://maven.terraformersmc.com/releases/' }
	mavenCentral()
	mavenLocal()
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	flatDir {
		dirs("libs")
	}
}

dependencies {
	minecraft("com.mojang:minecraft:${project.minecraft}")
	mappings("net.fabricmc:yarn:${project.mappings}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.fabric_loader}")
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_api}")
	modImplementation("com.terraformersmc:modmenu:${project.modmenu}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("licence") {
		rename { "${it}_${project.mod_name}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}